@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            </li>
            <li class="nav-item mr-3">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item mr-3">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
        @if (ViewContext.HttpContext.User.IsInRole("guest") || ViewContext.HttpContext.User.IsInRole("admin"))
        {
            <li>
                <a class="nav-link text-dark" asp-controller="Wishlist" asp-action="Index">
                    <i class="far fa-heart"></i>  Wishlist
                </a>
            </li>
            <li>
                <a class="nav-link text-dark" asp-controller="ShopCart" asp-action="Index">
                    <i class="fas fa-shopping-cart"></i> Cart
                    @*<span class="badge badge-danger">0</span>*@
                    <partial name="Notifications" action="OnGet" />
                </a>
            </li>
        }
    </ul>
